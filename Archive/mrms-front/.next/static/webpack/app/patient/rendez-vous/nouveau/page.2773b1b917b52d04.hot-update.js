"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/patient/rendez-vous/nouveau/page",{

/***/ "(app-pages-browser)/./src/services/appointmentService.js":
/*!********************************************!*\
  !*** ./src/services/appointmentService.js ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api */ \"(app-pages-browser)/./src/services/api.js\");\n\nconst appointmentService = {\n    /**\n     * Récupérer la liste des rendez-vous avec pagination et filtres\n     * @param {Object} params - Paramètres de filtrage et pagination\n     * @returns {Promise<Object>} Résultats paginés\n     */ async getAppointments () {\n        let params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        try {\n            const response = await _api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/rendezvous\", {\n                params\n            });\n            // S'assurer que la réponse est correctement formatée pour correspondre à la structure API réelle\n            const formattedResponse = {\n                data: response.data.rendezvous || response.data.items || response.data || [],\n                page: response.data.currentPage || response.data.page || 1,\n                totalPages: response.data.totalPages || 1,\n                totalItems: response.data.total || response.data.totalItems || 0,\n                limit: response.data.limit || 10\n            };\n            return formattedResponse;\n        } catch (error) {\n            console.error(\"Erreur lors de la r\\xe9cup\\xe9ration des rendez-vous:\", error);\n            throw error;\n        }\n    },\n    /**\n     * Récupérer un rendez-vous par son ID\n     * @param {string|number} id - ID du rendez-vous\n     * @returns {Promise<Object>} Détails du rendez-vous\n     */ async getAppointmentById (id) {\n        try {\n            const response = await _api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/rendezvous/\".concat(id));\n            return response.data;\n        } catch (error) {\n            console.error(\"Erreur lors de la r\\xe9cup\\xe9ration du rendez-vous \".concat(id, \":\"), error);\n            throw error;\n        }\n    },\n    /**\n     * Créer un nouveau rendez-vous\n     * @param {Object} appointmentData - Données du rendez-vous\n     * @returns {Promise<Object>} Rendez-vous créé\n     */ async createAppointment (appointmentData) {\n        try {\n            // Formater les données en fonction des attentes de l'API\n            const apiData = {\n                clientId: appointmentData.patientId,\n                date: appointmentData.date,\n                heure: appointmentData.heure,\n                duree: parseInt(appointmentData.duree, 10),\n                type: appointmentData.type,\n                notes: appointmentData.notes,\n                statut: appointmentData.statut || \"Planifi\\xe9\",\n                notifications: appointmentData.notifications || []\n            };\n            const response = await _api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/rendezvous\", apiData);\n            // Retourner le rendez-vous créé avec la structure correcte\n            return response.data.rendezvous || response.data;\n        } catch (error) {\n            console.error(\"Erreur lors de la cr\\xe9ation du rendez-vous:\", error);\n            throw error;\n        }\n    },\n    /**\n     * Mettre à jour un rendez-vous\n     * @param {string|number} id - ID du rendez-vous\n     * @param {Object} appointmentData - Données à mettre à jour\n     * @returns {Promise<Object>} Rendez-vous mis à jour\n     */ async updateAppointment (id, appointmentData) {\n        try {\n            // Formater les données en fonction des attentes de l'API\n            const apiData = {};\n            if (appointmentData.patientId) apiData.clientId = appointmentData.patientId;\n            if (appointmentData.date) apiData.date = appointmentData.date;\n            if (appointmentData.heure) apiData.heure = appointmentData.heure;\n            if (appointmentData.duree) apiData.duree = parseInt(appointmentData.duree, 10);\n            if (appointmentData.type) apiData.type = appointmentData.type;\n            if (appointmentData.notes !== undefined) apiData.notes = appointmentData.notes;\n            if (appointmentData.statut) apiData.statut = appointmentData.statut;\n            if (appointmentData.notifications) apiData.notifications = appointmentData.notifications;\n            const response = await _api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].put(\"/rendezvous/\".concat(id), apiData);\n            return response.data;\n        } catch (error) {\n            console.error(\"Erreur lors de la mise \\xe0 jour du rendez-vous \".concat(id, \":\"), error);\n            throw error;\n        }\n    },\n    /**\n     * Supprimer un rendez-vous\n     * @param {string|number} id - ID du rendez-vous\n     * @returns {Promise<Object>} Résultat de la suppression\n     */ async deleteAppointment (id) {\n        try {\n            const response = await _api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].delete(\"/rendezvous/\".concat(id));\n            return response.data;\n        } catch (error) {\n            console.error(\"Erreur lors de la suppression du rendez-vous \".concat(id, \":\"), error);\n            throw error;\n        }\n    },\n    /**\n     * Récupérer tous les statuts de rendez-vous\n     * @returns {Promise<Array>} Liste des statuts\n     */ async getAppointmentStatuses () {\n        try {\n            const response = await _api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/api/rendezvous/statuts\");\n            return response.data;\n        } catch (error) {\n            console.error(\"Erreur lors de la r\\xe9cup\\xe9ration des statuts de rendez-vous:\", error);\n            throw error;\n        }\n    },\n    /**\n     * Récupérer tous les types de notification\n     * @returns {Promise<Array>} Liste des types de notification\n     */ async getNotificationTypes () {\n        try {\n            const response = await _api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/api/rendezvous/types-notification\");\n            return response.data;\n        } catch (error) {\n            console.error(\"Erreur lors de la r\\xe9cup\\xe9ration des types de notification:\", error);\n            throw error;\n        }\n    },\n    /**\n     * Vérifier la disponibilité d'un créneau\n     * @param {Object} params - Paramètres (date, heure, durée)\n     * @returns {Promise<Object>} Résultat de la vérification\n     */ async checkAvailability (params) {\n        try {\n            const response = await _api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/api/rendezvous/disponibilite\", {\n                params\n            });\n            return response.data;\n        } catch (error) {\n            console.error(\"Erreur lors de la v\\xe9rification de disponibilit\\xe9:\", error);\n            throw error;\n        }\n    },\n    /**\n     * Récupérer les créneaux disponibles pour une date\n     * @param {string} date - Date au format YYYY-MM-DD\n     * @returns {Promise<Array>} Liste des créneaux disponibles\n     */ async getAvailableTimeSlots (date) {\n        try {\n            const response = await _api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/api/rendezvous/creneaux-disponibles\", {\n                params: {\n                    date\n                }\n            });\n            return response.data;\n        } catch (error) {\n            console.error(\"Erreur lors de la r\\xe9cup\\xe9ration des cr\\xe9neaux disponibles:\", error);\n            throw error;\n        }\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (appointmentService);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/appointmentService.js\n"));

/***/ })

});